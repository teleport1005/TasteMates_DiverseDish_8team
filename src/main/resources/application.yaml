spring:
  security:
    oauth2:
      client:
        provider:
          naver:
            # 인증 요청 URL
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            # Access Token 요청 URL
            token-uri: https://nid.naver.com/oauth2.0/token
            # 사용자 정보 조회 URL
            user-info-uri: https://openapi.naver.com/v1/nid/me
            # 응답받은 사용자 정보 중 사용자 이름이 무엇인지 담겨있는 JSON Key
            user-name-attribute: response
          kakao:
            # 인가코드 받기
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            # 토큰 받기
            token-uri: https://kauth.kakao.com/oauth/token
            # 사용자 정보 가져오기
            user-info-uri: https://kapi.kakao.com/v2/user/me
            # 응답에서 적당한 key 가져오기
            user-name-attribute: id

        registration:
          kakao:
            # REST API 키
            client-id: 72246d6f047747ec64f19bd2e88d7e97
            # Client Secret
            client-secret: YDmhTAW3HudxOLZDUu3hEXGDelsIPyKZ
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            # naver랑 똑같이 써주면 됨
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email

          naver:
            client-id: aXzxdxgzk5vWziMW1Q6i
            client-secret: RSxPoetUuW
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Naver
            scope:
              - nickname
              - email
              - name
              - profile_image

  datasource:
    #    pc에 만들어 놓은 DataBase 이름을 써야한다.
    url: jdbc:mysql://database-1.cvqi4qeimxir.us-east-1.rds.amazonaws.com:3306/dish
    driver-class-name: com.mysql.cj.jdbc.Driver

    username: admin
    password: lolpop12


  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
  sql:
    init:
      mode: always
  jackson:
    serialization:
      fail-on-empty-beans: false